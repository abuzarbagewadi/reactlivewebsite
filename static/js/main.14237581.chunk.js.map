{"version":3,"sources":["Comp/Data.js","App.js","reportWebVitals.js","index.js"],"names":["Data","useState","varb","setVar","num","setNum","buttonClickid","setbuttonClickid","useEffect","axios","get","then","result","data","catch","ex","alert","value","onChange","e","target","className","onClick","title","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA+BeA,MA5Bf,WAAiB,IAAD,EAEWC,mBAAS,IAFpB,mBAELC,EAFK,KAECC,EAFD,OAGUF,mBAAS,GAHnB,mBAGLG,EAHK,KAGAC,EAHA,OAI8BJ,mBAAS,GAJvC,mBAILK,EAJK,KAIUC,EAJV,KAgBZ,OAVAC,qBAAU,WACNC,IAAMC,IAAN,qDAAwDJ,IACvDK,MAAK,SAAAC,GACFT,EAAOS,EAAOC,SAEjBC,OAAM,SAAAC,GACHC,MAAMD,QAEZ,CAACT,IAGC,gCACI,oDACA,8BAAK,uBAAOW,MAAOb,EAAKc,SAAU,SAAAC,GAAC,OAAId,EAAOc,EAAEC,OAAOH,QAAQI,UAAU,SACzE,wBAAQA,UAAU,SAASC,QAAS,kBAAMf,EAAiBH,IAA3D,sBAEA,8DACA,oBAAGiB,UAAU,QAAb,cAAuBnB,EAAKqB,MAA5B,WCfGC,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCMSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.14237581.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Data() {\r\n\r\n    const [varb, setVar] = useState({})\r\n    const [num, setNum] = useState(1)\r\n    const [buttonClickid, setbuttonClickid] = useState(1)\r\n\r\n    useEffect(()=>{\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${buttonClickid}`)\r\n        .then(result => {\r\n            setVar(result.data)\r\n        })\r\n        .catch(ex => {\r\n            alert(ex)\r\n        })\r\n    },[buttonClickid])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Enter any integer </h2>\r\n            <div><input value={num} onChange={e => setNum(e.target.value)} className=\"in\"/></div>\r\n            <button className='center' onClick={() => setbuttonClickid(num)}>Get Text</button>\r\n\r\n            <h3>The corresponding string is:</h3>\r\n            <p className='block'>\"{varb.title}\"</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Data","import './App.css';\r\nimport Data from './Comp/Data';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Data/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}